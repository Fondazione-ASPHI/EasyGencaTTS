<!DOCTYPE html>
<html lang="it">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GencaTTS @Fondazione ASPHI Onlus</title>
    <script src="https://webgazer.cs.brown.edu/webgazer.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            margin: 20px;
        }

        textarea {
            width: 90%;
            min-height: 50px;
            font-size: 18px;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            resize: none;
            overflow: hidden;
        }

        button {
            padding: 10px 15px;
            font-size: 16px;
            margin: 5px;
            cursor: pointer;
        }

        #settings {
            display: none;
            text-align: left;
            margin-top: 10px;
            padding: 10px;
            border: 1px solid #ccc;
            width: 80%;
            margin-left: auto;
            margin-right: auto;
        }

        #loading {
            display: none;
            font-weight: bold;
            color: blue;
        }
    </style>
</head>

<body>
    <h2>Easy GencaTTS @Fondazione ASPHI Onlus</h2>
    <textarea id="textInput" placeholder="Scrivi qui..." oninput="autoResize(this)"></textarea>
    <br>
    <button id="gptButton">GPT</button>
    <button id="speakButton">Parla</button>
    <button id="clearButton">Cancella</button>
    <button id="settingsButton">‚öôÔ∏è Settings</button>
    <button id="fullscreenButton">üî≤ Schermo Intero</button>
    <button id="listenButton">üé§ Conversazione</button>
    <button id="instructionsButton">üìñ Leggi le Istruzioni</button>

    <div id="suggestions" style="margin-top: 20px;"></div>
    <p id="status"></p>
    <p id="loading">Elaborazione in corso...</p>
    <audio id="audioPlayer" controls></audio>

    <script>
        let gazeTarget = null;
        let gazeStartTime = 0;
        const gazeDuration = 2000; // 2 secondi di fissazione per il clic

        document.getElementById("instructionsButton").onclick = function () {
            window.open('https://genca79.github.io/EasyGencaTTS/README.md', '_blank');
        };

        function autoResize(textarea) {
            textarea.style.height = "auto";
            textarea.style.height = textarea.scrollHeight + "px";
        }

        function cancellaTesto() {
            document.getElementById("textInput").value = "";
        }

        function toggleFullScreen() {
            if (!document.fullscreenElement) {
                document.documentElement.requestFullscreen();
            } else {
                document.exitFullscreen();
            }
        }

        function startGazeTracking() {
            webgazer.setGazeListener((data) => {
                if (!data) return;
                checkGazeTarget(data.x, data.y);
            }).begin();
        }

        function checkGazeTarget(x, y) {
            let elements = document.querySelectorAll("button");
            elements.forEach(el => {
                let rect = el.getBoundingClientRect();
                if (x >= rect.left && x <= rect.right && y >= rect.top && y <= rect.bottom) {
                    if (gazeTarget !== el) {
                        gazeTarget = el;
                        gazeStartTime = Date.now();
                    } else if (Date.now() - gazeStartTime >= gazeDuration) {
                        gazeTarget.click();
                        gazeTarget = null;
                    }
                }
            });
        }

        async function correggiTesto() {
            let text = document.getElementById("textInput").value.trim();
            if (!text) return alert("Inserisci un testo!");

            document.getElementById("loading").style.display = "block";

            try {
                const response = await fetch("https://api.openai.com/v1/chat/completions", {
                    method: "POST",
                    headers: {
                        "Authorization": `Bearer ${localStorage.getItem("gptApiKey")}`,
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({
                        model: localStorage.getItem("gptModel") || "gpt-3.5-turbo",
                        messages: [{ role: "system", content: "Correggi il testo" }, { role: "user", content: text }]
                    })
                });

                if (!response.ok) throw new Error("Errore API GPT");

                const result = await response.json();
                document.getElementById("textInput").value = result.choices[0].message.content;
                document.getElementById("status").innerText = "Testo corretto!";
            } catch (error) {
                document.getElementById("status").innerText = "Errore: " + error.message;
            } finally {
                document.getElementById("loading").style.display = "none";
            }
        }

        async function convertiVoce() {
            let text = document.getElementById("textInput").value.trim();
            if (!text) return alert("Inserisci un testo!");

            document.getElementById("loading").style.display = "block";

            try {
                const response = await fetch(`https://api.elevenlabs.io/v1/text-to-speech/${localStorage.getItem("voiceId")}`, {
                    method: "POST",
                    headers: {
                        "xi-api-key": localStorage.getItem("apiKey"),
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ text: text, model_id: "eleven_flash_v2_5" })
                });

                if (!response.ok) throw new Error("Errore API TTS");

                const audioBlob = await response.blob();
                document.getElementById("audioPlayer").src = URL.createObjectURL(audioBlob);
                document.getElementById("audioPlayer").play();
                document.getElementById("status").innerText = "Audio generato!";
            } catch (error) {
                document.getElementById("status").innerText = "Errore: " + error.message;
            } finally {
                document.getElementById("loading").style.display = "none";
            }
        }

        document.getElementById("gptButton").onclick = correggiTesto;
        document.getElementById("speakButton").onclick = convertiVoce;
        document.getElementById("clearButton").onclick = cancellaTesto;
        document.getElementById("fullscreenButton").onclick = toggleFullScreen;

        document.addEventListener("DOMContentLoaded", startGazeTracking);
    </script>
</body>
</html>
